USER STORIES:

1st User Story:
As a Virtual Machine, I want to store information in a certain spot in memory, so that I can access it later.

2nd User Story:
As a educational client, I want to experiment with machine language so that I can teach machine language and computer architecture using this simulator.


USE CASES:

1.
    As a student, I want to build a calculator that multiples two numbers.

    1. Open Instruction File
    2. Add read instructions to get inputs from keyboard and store them in memory
    3. Add load instruction to load desired value into accumulator
    4. Add multiply instruction to perform operation
    5. Run program

2.
    As a student, I want to build a calculator that divides two numbers.

    1. Open Instruction File
    2. Add read instructions to get inputs from keyboard and store them in memory
    3. Add load instruction to load desired value into accumulator
    4. Add divide instruction to perform operation
    5. Run program

3. 
    As a deveoper, I want to skip lines of code in my file and execute different commands.

    1. Open instruction file
    2. Add a branch command to link to a certain memory location
    3. Add desired code. 
    4. Add a new halt command. 

4. As a student, I want to be able to add two numbers
    1. Open Instruction File
    2. Add read instructions to get inputs from keyboard and store them in memory
    3. Add load instruction to load desired value into accumulator
    4. Add the addition instruction to perform operation
    5. Run program

5. As a virtual machine I want to decrement number numbers using subtraction in case the user needs to.
    1. Open Instruction File
    2. Add read instructions to get inputs from keyboard and store them in memory
    3. Add load instruction to load desired value into accumulator
    4. Add the subtraction instruction to perform operation
    5. Run program 

6. As a virtual machine, I want to store a value from the accumulator into position 5 for later.

    1. Open Instruction file
    2. Add store instruction with a value of 05
    4. Run Program

7. As a virtual machine, I want to load a value from the 1st element into the accumulator for later.

    1. Open Instruction file
    2. Add load instruction with a value of 01
    4. Run Program

8. As Virtual Machine, I want to read a a value from the user into the memory.

    1. Open Instruction File
    2. Prompt user for a command
    3. Make sure the command is 4 digits or less
    4. Make sure the address to write to is in memory
    5. Write user command to address

9. As a virtual machine, I want to write a value to the screen

    1. Open Instruction File
    2. Get address to write to
    3. Resize memory if needed
    4. Write to memory address

10. As a virtual machine, I want to jump through memory locations if the accumulator is set to 0

    1. Check to see if the accumulator is set to "0000"
    2. Get address to jump to
    3. Jump to address
